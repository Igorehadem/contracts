/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  InterfaceIDs,
  InterfaceIDsInterface,
} from "../../../contracts/test/InterfaceIDs";

const _abi = [
  {
    inputs: [],
    name: "accessControl",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "accessControlEnumerable",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "erc1363",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "erc165",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x61019b61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100715760003560e01c8063785e9e861161005a578063785e9e86146100f35780637965b67614610119578063af6a1fd81461013f57600080fd5b806313007d5514610076578063233a5080146100cd575b600080fd5b7f7965db0b000000000000000000000000000000000000000000000000000000005b6040517fffffffff00000000000000000000000000000000000000000000000000000000909116815260200160405180910390f35b7f01ffc9a700000000000000000000000000000000000000000000000000000000610098565b7f36372b0700000000000000000000000000000000000000000000000000000000610098565b7f5a05180f00000000000000000000000000000000000000000000000000000000610098565b7fb0202a110000000000000000000000000000000000000000000000000000000061009856fea2646970667358221220ef9ddc7f9430c499c2cf196b6955a5d53b90d89fc46b7f0376c7caa47e6ea31664736f6c63430008070033";

type InterfaceIDsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InterfaceIDsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InterfaceIDs__factory extends ContractFactory {
  constructor(...args: InterfaceIDsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<InterfaceIDs> {
    return super.deploy(overrides || {}) as Promise<InterfaceIDs>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): InterfaceIDs {
    return super.attach(address) as InterfaceIDs;
  }
  override connect(signer: Signer): InterfaceIDs__factory {
    return super.connect(signer) as InterfaceIDs__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InterfaceIDsInterface {
    return new utils.Interface(_abi) as InterfaceIDsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): InterfaceIDs {
    return new Contract(address, _abi, signerOrProvider) as InterfaceIDs;
  }
}
