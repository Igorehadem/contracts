/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TestStableThenToken,
  TestStableThenTokenInterface,
} from "../../../contracts/test/TestStableThenToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_stableCoin",
        type: "address",
      },
    ],
    name: "__StableThenToken_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getRoleMember",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleMemberCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_stableCoin",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "setToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stableCoin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "test_stablePhaseOnly",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "test_tokenPhaseOnly",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611484806100206000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806391d1485411610097578063ca15c87311610066578063ca15c87314610246578063d547741f14610259578063e5bd135d1461026c578063fc0c546a1461027457600080fd5b806391d14854146101df578063992642e514610218578063a217fddf1461022b578063c4d66de81461023357600080fd5b806336568abe116100d357806336568abe14610186578063683b4430146101995780638401f1f7146101ac5780639010d07c146101b457600080fd5b806301ffc9a714610105578063144fa6d71461012d578063248a9ca3146101425780632f2ff15d14610173575b600080fd5b6101186101133660046111ba565b610287565b60405190151581526020015b60405180910390f35b61014061013b366004611116565b6102cb565b005b610165610150366004611153565b60009081526065602052604090206001015490565b604051908152602001610124565b61014061018136600461116c565b61053e565b61014061019436600461116c565b610568565b6101406101a7366004611116565b6105f4565b6101406107bb565b6101c76101c2366004611198565b610815565b6040516001600160a01b039091168152602001610124565b6101186101ed36600461116c565b60009182526065602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60c9546101c7906001600160a01b031681565b610165600081565b610140610241366004611116565b610834565b610165610254366004611153565b61090c565b61014061026736600461116c565b610923565b610140610948565b60ca546101c7906001600160a01b031681565b60006001600160e01b031982167f5a05180f0000000000000000000000000000000000000000000000000000000014806102c557506102c5826109a1565b92915050565b60006102d6816109ef565b60ca546001600160a01b0316156103345760405162461bcd60e51b815260206004820152601460248201527f537461626c6520636f696e2064697361626c656400000000000000000000000060448201526064015b60405180910390fd5b6001600160a01b03821661038a5760405162461bcd60e51b815260206004820152601360248201527f41646472657373206d7573742062652073657400000000000000000000000000604482015260640161032b565b6103bd6001600160a01b0383167f36372b07000000000000000000000000000000000000000000000000000000006109fc565b6104095760405162461bcd60e51b815260206004820152601760248201527f6e6f7420612076616c696420455243323020746f6b656e000000000000000000604482015260640161032b565b60008290506104c1816001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b15801561044a57600080fd5b505afa15801561045e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261048691908101906111e4565b6040518060400160405280600381526020017f54414c0000000000000000000000000000000000000000000000000000000000815250610a18565b61050d5760405162461bcd60e51b815260206004820152601560248201527f746f6b656e206e616d65206973206e6f742054414c0000000000000000000000604482015260640161032b565b505060ca805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b600082815260656020526040902060010154610559816109ef565b6105638383610a24565b505050565b6001600160a01b03811633146105e65760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c660000000000000000000000000000000000606482015260840161032b565b6105f08282610a46565b5050565b600054610100900460ff16158080156106145750600054600160ff909116105b8061062e5750303b15801561062e575060005460ff166001145b6106a05760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a6564000000000000000000000000000000000000606482015260840161032b565b6000805460ff1916600117905580156106c3576000805461ff0019166101001790555b6001600160a01b03821661073f5760405162461bcd60e51b815260206004820152602160248201527f737461626c652d636f696e2061646472657373206d7573742062652076616c6960448201527f6400000000000000000000000000000000000000000000000000000000000000606482015260840161032b565b60c9805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038416179055610772600033610a68565b80156105f0576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b60ca546001600160a01b03166108135760405162461bcd60e51b815260206004820152601560248201527f54414c20746f6b656e206e6f7420796574207365740000000000000000000000604482015260640161032b565b565b600082815260976020526040812061082d9083610a72565b9392505050565b600054610100900460ff16158080156108545750600054600160ff909116105b8061086e5750303b15801561086e575060005460ff166001145b6108e05760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a6564000000000000000000000000000000000000606482015260840161032b565b6000805460ff191660011790558015610903576000805461ff0019166101001790555b610772826105f4565b60008181526097602052604081206102c590610a7e565b60008281526065602052604090206001015461093e816109ef565b6105638383610a46565b60ca546001600160a01b0316156108135760405162461bcd60e51b815260206004820152601460248201527f537461626c6520636f696e2064697361626c6564000000000000000000000000604482015260640161032b565b60006001600160e01b031982167f7965db0b0000000000000000000000000000000000000000000000000000000014806102c557506301ffc9a760e01b6001600160e01b03198316146102c5565b6109f98133610a88565b50565b6000610a0783610b08565b801561082d575061082d8383610b3b565b600061082d8383610c39565b610a2e8282610c5e565b60008281526097602052604090206105639082610d00565b610a508282610d15565b60008281526097602052604090206105639082610d98565b6105f08282610a24565b600061082d8383610dad565b60006102c5825490565b60008281526065602090815260408083206001600160a01b038516845290915290205460ff166105f057610ac6816001600160a01b03166014610dd7565b610ad1836020610dd7565b604051602001610ae29291906112ad565b60408051601f198184030181529082905262461bcd60e51b825261032b9160040161132e565b6000610b1b826301ffc9a760e01b610b3b565b80156102c55750610b34826001600160e01b0319610b3b565b1592915050565b604080516001600160e01b0319831660248083019190915282518083039091018152604490910182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166301ffc9a760e01b179052905160009190829081906001600160a01b0387169061753090610bb7908690611291565b6000604051808303818686fa925050503d8060008114610bf3576040519150601f19603f3d011682016040523d82523d6000602084013e610bf8565b606091505b5091509150602081511015610c1357600093505050506102c5565b818015610c2f575080806020019051810190610c2f9190611131565b9695505050505050565b60008151835114801561082d5750508051602091820120825192909101919091201490565b60008281526065602090815260408083206001600160a01b038516845290915290205460ff166105f05760008281526065602090815260408083206001600160a01b03851684529091529020805460ff19166001179055610cbc3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600061082d836001600160a01b038416610fb8565b60008281526065602090815260408083206001600160a01b038516845290915290205460ff16156105f05760008281526065602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b600061082d836001600160a01b038416611007565b6000826000018281548110610dc457610dc4611422565b9060005260206000200154905092915050565b60606000610de6836002611379565b610df1906002611361565b67ffffffffffffffff811115610e0957610e09611438565b6040519080825280601f01601f191660200182016040528015610e33576020820181803683370190505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110610e6a57610e6a611422565b60200101906001600160f81b031916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110610eb557610eb5611422565b60200101906001600160f81b031916908160001a9053506000610ed9846002611379565b610ee4906001611361565b90505b6001811115610f69577f303132333435363738396162636465660000000000000000000000000000000085600f1660108110610f2557610f25611422565b1a60f81b828281518110610f3b57610f3b611422565b60200101906001600160f81b031916908160001a90535060049490941c93610f62816113df565b9050610ee7565b50831561082d5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161032b565b6000818152600183016020526040812054610fff575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556102c5565b5060006102c5565b600081815260018301602052604081205480156110f057600061102b600183611398565b855490915060009061103f90600190611398565b90508181146110a457600086600001828154811061105f5761105f611422565b906000526020600020015490508087600001848154811061108257611082611422565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806110b5576110b561140c565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506102c5565b60009150506102c5565b80356001600160a01b038116811461111157600080fd5b919050565b60006020828403121561112857600080fd5b61082d826110fa565b60006020828403121561114357600080fd5b8151801515811461082d57600080fd5b60006020828403121561116557600080fd5b5035919050565b6000806040838503121561117f57600080fd5b8235915061118f602084016110fa565b90509250929050565b600080604083850312156111ab57600080fd5b50508035926020909101359150565b6000602082840312156111cc57600080fd5b81356001600160e01b03198116811461082d57600080fd5b6000602082840312156111f657600080fd5b815167ffffffffffffffff8082111561120e57600080fd5b818401915084601f83011261122257600080fd5b81518181111561123457611234611438565b604051601f8201601f19908116603f0116810190838211818310171561125c5761125c611438565b8160405282815287602084870101111561127557600080fd5b6112868360208301602088016113af565b979650505050505050565b600082516112a38184602087016113af565b9190910192915050565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516112e58160178501602088016113af565b7f206973206d697373696e6720726f6c652000000000000000000000000000000060179184019182015283516113228160288401602088016113af565b01602801949350505050565b602081526000825180602084015261134d8160408501602087016113af565b601f01601f19169190910160400192915050565b60008219821115611374576113746113f6565b500190565b6000816000190483118215151615611393576113936113f6565b500290565b6000828210156113aa576113aa6113f6565b500390565b60005b838110156113ca5781810151838201526020016113b2565b838111156113d9576000848401525b50505050565b6000816113ee576113ee6113f6565b506000190190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea264697066735822122054b9150d7ed26a064568e7417be611da1576356eaaf574437e785e1bb4c93ba264736f6c63430008070033";

type TestStableThenTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestStableThenTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestStableThenToken__factory extends ContractFactory {
  constructor(...args: TestStableThenTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestStableThenToken> {
    return super.deploy(overrides || {}) as Promise<TestStableThenToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestStableThenToken {
    return super.attach(address) as TestStableThenToken;
  }
  override connect(signer: Signer): TestStableThenToken__factory {
    return super.connect(signer) as TestStableThenToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestStableThenTokenInterface {
    return new utils.Interface(_abi) as TestStableThenTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestStableThenToken {
    return new Contract(address, _abi, signerOrProvider) as TestStableThenToken;
  }
}
